
<%= form_tag(photos_create_path(), :multipart=>true, :remote => true) do %>
   <%= select_tag "photo_album", options_from_collection_for_select(@folders, "id", "name",1),{:include_blank => true, :style => "width: 220px", :class => "chzn-select-deselect", :"data-placeholder" => "查找邮件列表"} %>

    <input id="my_file_element" type="file" name="file_1" multiple="true" >
    <div id="files_list"></div>

    <div class="md-footer" style="float:right;">
       <%= submit_tag "Submit", :class => "btn" %>
    </div>
<% end %>


<script>
function MultiSelector(list_target, max) {
    this.list_target = list_target;
    this.count = 0;
    this.id = 0;
    if (max) {
        this.max = max;
    } else {
        this.max = -1;
    };
    this.addElement = function(element) {
        if (element.tagName == 'INPUT' && element.type == 'file') {
            element.name = 'file_' + this.id++;
            element.multi_selector = this;
            element.onchange = function() {
                var new_element = document.createElement('input');
                new_element.type = 'file';
                this.parentNode.insertBefore(new_element, this);
                this.multi_selector.addElement(new_element);
                this.multi_selector.addListRow(this);
                this.multi_selector.addThumbnail(this);
                this.style.position = 'absolute';
                this.style.left = '-1000px';
            };
            if (this.max != -1 && this.count >= this.max) {
                element.disabled = true;
            };
            this.count++;
            this.current_element = element;
        } else {
            alert('Error: not a file input element');
        };
    };
    
    this.addThumbnail = function(element) {
        var new_row = document.createElement('img');
        var props = "", errors = ""; 

        for(var p in element){
          try{ 
		  if(typeof(element[p])=="function"){  
		  } else {
		      props+= p + "=" + element[p] + "\t";
		  }
          } catch(e) { errors = errors + String(e) + "\t"; }
        }
       // alert(props);

        //new_row.src = element.files[0];
        var reader = new FileReader();
        reader.onload = function (e) {
             new_row.width = 100;
             new_row.src   = e.target.result;
            }  
        reader.readAsDataURL(element.files[0]);    

        this.list_target.appendChild(new_row);
    };
    this.addListRow = function(element) {
        var new_row = document.createElement('div');
        var new_row_button = document.createElement('input');
        new_row_button.type = 'button';
        new_row_button.value = 'Delete';
        new_row.element = element;
        new_row_button.onclick = function() {
            this.parentNode.element.parentNode.removeChild(this.parentNode.element);
            this.parentNode.parentNode.removeChild(this.parentNode);
            this.parentNode.element.multi_selector.count--;
            this.parentNode.element.multi_selector.current_element.disabled = false;
            return false;
        };
        new_row.innerHTML = element.value;
        new_row.appendChild(new_row_button);
        this.list_target.appendChild(new_row);
    };
};
        <!-- Create an instance of the multiSelector class, pass it the output target and the max number of files -->
        var multi_selector = new MultiSelector( document.getElementById( 'files_list' ), 3 );
        <!-- Pass in the file element -->
        multi_selector.addElement( document.getElementById( 'my_file_element' ) );
</script>
